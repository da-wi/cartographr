df.allzip.schwartz.aggr <- df.allzip.schwartz %>% group_by(country) %>%
dplyr::select(matches("^ASTER.*_mean$|^SRTM.*_mean$|harmony|embedded|hierarchy|mastery|egalitar|aff_auton|intel_auto")) %>%
summarise_all(list(mean)) %>%
filter(!is.na(country))
corrplot::corrplot(cor(df.allzip.schwartz.aggr %>% select_if(is.numeric), use = "complete.obs"))
cor(df.allzip.schwartz.aggr$SRTM_zip_elevation_mean, df.allzip.schwartz.aggr$harmony, use = "complete.obs")
cor(df.allzip.schwartz.aggr$ASTER_temp_mean_mean, df.allzip.schwartz.aggr$harmony, use = "complete.obs")
df.allzip.schwartz.aggr
df.allzip.schwartz.aggr %>% View()
df.allzip.schwartz.aggr <- df.allzip.schwartz %>% group_by(country) %>%
dplyr::select(matches("^ASTER.*_mean$|^SRTM.*_mean$|harmony|embedded|hierarchy|mastery|egalitar|aff_auton|intel_auto")) %>%
summarise_all(list(mean(., na.rm = TRUE))) %>%
filter(!is.na(country))
df.allzip.schwartz.aggr <- df.allzip.schwartz %>% group_by(country) %>%
dplyr::select(matches("^ASTER.*_mean$|^SRTM.*_mean$|harmony|embedded|hierarchy|mastery|egalitar|aff_auton|intel_auto")) %>%
summarise_all(funs(mean(., na.rm = TRUE))) %>%
filter(!is.na(country))
corrplot::corrplot(cor(df.allzip.schwartz.aggr %>% select_if(is.numeric), use = "complete.obs"))
df.allzip.schwartz.aggr %>% View()
cor(df.allzip.schwartz.aggr$ASTER_ndvi_mean_mean,df.allzip.schwartz.aggr$ASTER_temp_mean_mean)
cor(df.allzip.schwartz.aggr$ASTER_ndvi_mean_mean,df.allzip.schwartz.aggr$ASTER_zip_elevation_mean)
df.allzip.schwartz.aggr %>% View()
df.allzip.schwartz.aggr <- df.allzip.schwartz %>% group_by(country) %>%
dplyr::select(matches("^ASTER.*_mean$|^SRTM.*_mean$|harmony|embedded|hierarchy|mastery|egalitar|aff_auton|intel_auto")) %>%
summarise_all(funs(mean(., na.rm = TRUE))) %>%
filter(!is.na(country)) %>%
filter(country == "nzl")
cor(df.allzip.schwartz.aggr$SRTM_zip_elevation_mean, df.allzip.schwartz.aggr$harmony, use = "complete.obs")
cor(df.allzip.schwartz.aggr$ASTER_temp_mean_mean, df.allzip.schwartz.aggr$harmony, use = "complete.obs")
corrplot::corrplot(cor(df.allzip.schwartz.aggr %>% select_if(is.numeric), use = "complete.obs"))
df.allzip.schwartz.aggr %>% View()
df.allzip.schwartz.aggr <- df.allzip.schwartz %>% group_by(country) %>%
dplyr::select(matches("^ASTER.*_mean$|^SRTM.*_mean$|harmony|embedded|hierarchy|mastery|egalitar|aff_auton|intel_auto")) %>%
summarise_all(funs(mean(., na.rm = TRUE))) %>%
filter(!is.na(country)) %>%
filter(country != "nzl")
corrplot::corrplot(cor(df.allzip.schwartz.aggr %>% select_if(is.numeric), use = "complete.obs"))
df.allzip.schwartz.aggr %>% View()
df.allzip.schwartz.aggr <- df.allzip.schwartz %>% group_by(country) %>%
dplyr::select(matches("^ASTER.*_mean$|^SRTM.*_mean$|harmony|embedded|hierarchy|mastery|egalitar|aff_auton|intel_auto")) %>%
summarise_all(funs(mean(., na.rm = TRUE))) %>%
filter(!is.na(country)) %>%
filter(country != "nzl") %>%
select(-egalitar)
cor(df.allzip.schwartz.aggr$SRTM_zip_elevation_mean, df.allzip.schwartz.aggr$harmony, use = "complete.obs")
cor(df.allzip.schwartz.aggr$ASTER_temp_mean_mean, df.allzip.schwartz.aggr$harmony, use = "complete.obs")
corrplot::corrplot(cor(df.allzip.schwartz.aggr %>% select_if(is.numeric), use = "complete.obs"))
(4.14+3.83)/2
(3.46+3.15)/2
(2.09+1.87)/2
(4.12+3.95)/2
(4.0+4.311)/2
(4.5+4.81)/2
(4.8+4.98)/2
(4.46+4.62)/2
(3.16+3.03)/2
(1.77+187)/2
(1.77+1.87)/2
(4+3.86)/2
(4.28+4.11)/2
(4.68+4.99)/2
(4.95+5.07)/2
(3.28+3.57)/2
(3.61+3.4.09)/2
(3.61+4.09)/2
(2.51+2.6)/2
(4.02+4.1)/2
(3.79+3.37)/2
(4.54+4.28)/2
(4.77+4.6)/2
df.schwartz <-vroom::vroom("Z:/Projekte/schwartz/cultvalueorientationscores2.csv")
df.allzip <- vroom::vroom("D:/ASTER/AllCountries_SRTM_ASTER_final.csv")
df.allzip <- data.table::as.data.table(df.allzip)
df.countrylist <- tibble(countrycode = countrycode::codelist$iso2c, country=stringr::str_to_lower(countrycode::codelist$iso3c))
df.allzip.schwartz <- df.schwartz %>% inner_join(df.countrylist) %>% inner_join(df.allzip)
df.allzip.schwartz
df.allzip.schwartz.aggr <- df.allzip.schwartz %>% group_by(country) %>%
dplyr::select(matches("^ASTER.*_mean$|^SRTM.*_mean$|harmony|embedded|hierarchy|mastery|egalitar|aff_auton|intel_auto")) %>%
summarise_all(funs(mean(., na.rm = TRUE))) %>%
filter(!is.na(country)) %>%
filter(country != "nzl")
cor(df.allzip.schwartz.aggr$SRTM_zip_elevation_mean, df.allzip.schwartz.aggr$harmony, use = "complete.obs")
cor(df.allzip.schwartz.aggr$ASTER_temp_mean_mean, df.allzip.schwartz.aggr$harmony, use = "complete.obs")
corrplot::corrplot(cor(df.allzip.schwartz.aggr %>% select_if(is.numeric), use = "complete.obs"))
df.allzip.schwartz.aggr %>% distinct(countrycode)
df.allzip.schwartz.aggr %>% distinct(country)
df.allzip.schwartz.aggr %>% distinct(country) %>% View()
corrplot::corrplot(cor(df.allzip.schwartz.aggr %>% select_if(is.numeric), use = "complete.obs"))
cor(df.allzip.schwartz.aggr$ASTER_temp_mean_mean, df.allzip.schwartz.aggr$intel_auton, use = "complete.obs")
library(ggplot2)
ggplot(df.allzip.schwartz.aggr, aes(x=ASTER_temp_mean_mean/100-273.15,y=intel_auton))+
geom_point()
ggplot(df.allzip.schwartz.aggr, aes(x=ASTER_temp_mean_mean/100-273.15,y=intel_auton))+
geom_label()
ggplot(df.allzip.schwartz.aggr, aes(x=ASTER_temp_mean_mean/100-273.15,y=intel_auton))+
geom_label(aes(label=country))
corrplot::corrplot(cor(df.allzip.schwartz.aggr %>% select_if(is.numeric), use = "complete.obs"))
ggplot(df.allzip.schwartz.aggr, aes(x=ASTER_temp_mean_mean/100-273.15,y=embedded))+
geom_label(aes(label=country))
ggplot(df.allzip.schwartz.aggr, aes(x=ASTER_temp_mean_mean/100-273.15,y=hierarchy))+
geom_label(aes(label=country))
cor.test(df.allzip.schwartz.aggr$SRTM_zip_elevation_mean, df.allzip.schwartz.aggr$harmony, use = "complete.obs")
cor.test(df.allzip.schwartz.aggr$ASTER_temp_mean_mean, df.allzip.schwartz.aggr$intel_auton, use = "complete.obs")
rnaturalearth::ne_countries()
ggplot()+geom_sf(data=rnaturalearth::ne_countries())
ggplot(data = world) +
geom_sf()
library(rnaturalearthdata)
ggplot(data = world) +
geom_sf()
library(rnaturalearth)
library(rnaturalearthdata)
ggplot(data = world) +
geom_sf()
world <- ne_countries(scale = "medium", returnclass = "sf")
ggplot(data = world) +
geom_sf()
world
world <- ne_countries(scale = "medium", returnclass = "sf") %>% filter(continent != "Antarctica" )
ggplot(data = world) +
geom_sf()
world <- world %>% mutate(country = stringr::str_to_lower(iso_a3))
world
world <- world %>% mutate(country = stringr::str_to_lower(iso_a3)) %>% inner_join(df.allzip.schwartz.aggr)
ggplot(data = world) +
geom_sf()
world <- ne_countries(scale = "medium", returnclass = "sf") %>% filter(continent != "Antarctica" )
world <- world %>% mutate(country = stringr::str_to_lower(iso_a3)) %>% full_join(df.allzip.schwartz.aggr)
ggplot(data = world) +
geom_sf()
ggplot(data = world, aes(fill=harmony)) +
geom_sf()
ggplot(data = world, aes(fill=intel_auton)) +
geom_sf()
ggplot(data = world, aes(fill=intel_auton)) +
geom_sf()+
scale_color_viridis_c(option="inferno")
ggplot(data = world, aes(fill=intel_auton)) +
geom_sf()+
scale_fill_viridis_c(option="inferno")
ggplot(data = world, aes(fill=intel_auton)) +
geom_sf()+
scale_fill_viridis_c(option="inferno")+theme_minimal()
ggplot(data = world, aes(fill=intel_auton,color=NA)) +
geom_sf()+
scale_fill_viridis_c(option="inferno")+theme_minimal()
ggplot(data = world, aes(fill=intel_auton),color=NA) +
geom_sf()+
scale_fill_viridis_c(option="inferno")+theme_minimal()
ggplot(data = world, aes(fill=intel_auton)) +
geom_sf(color=NA)+
scale_fill_viridis_c(option="inferno")+theme_minimal()
ggplot(data = world, aes(fill=intel_auton)) +
geom_sf(color="white")+
scale_fill_viridis_c(option="inferno")+theme_minimal()
ggplot(data = world, aes(fill=intel_auton)) +
geom_sf(color="white", linewidth=0)+
scale_fill_viridis_c(option="inferno")+theme_minimal()
ggplot(data = world, aes(fill=intel_auton)) +
geom_sf(color="white", linewidth=NA)+
scale_fill_viridis_c(option="inferno")+theme_minimal()
ggplot(data = world, aes(fill=intel_auton)) +
geom_sf(color=NA, linewidth=NA)+
scale_fill_viridis_c(option="inferno")+theme_minimal()
ggplot(data = world, aes(fill=ASTER_temp_mean_mean)) +
geom_sf(color=NA, linewidth=NA)+
scale_fill_viridis_c(option="inferno")+theme_minimal()
ggplot(data = world, aes(fill=intel_auton)) +
geom_sf(color=NA, linewidth=NA)+
scale_fill_viridis_c(option="inferno")+theme_minimal()
ggplot(data = world, aes(fill=ASTER_temp_mean_mean)) +
geom_sf(color=NA, linewidth=NA)+
scale_fill_viridis_c(option="inferno")+theme_minimal()
ggplot(data = world, aes(fill=ASTER_temp_mean_mean)) +
geom_sf(color=NA, linewidth=NA)+
scale_fill_viridis_c(option="inferno")+theme_minimal()
ggplot(data = world, aes(fill=intel_auton)) +
geom_sf(color=NA, linewidth=NA)+
scale_fill_viridis_c(option="inferno")+theme_minimal()
ggplot(data = world, aes(fill=ASTER_temp_mean_mean)) +
geom_sf(color=NA, linewidth=NA)+
scale_fill_viridis_c(option="inferno")+theme_minimal()
ggplot(df.allzip.schwartz.aggr, aes(x=ASTER_temp_mean_mean/100-273.15,y=intel_auton))+
geom_label(aes(label=country))
ggplot(df.allzip.schwartz.aggr, aes(x=ASTER_temp_mean_mean/100-273.15,y=embedded))+
geom_label(aes(label=country))
ggplot(df.allzip.schwartz.aggr, aes(x=ASTER_temp_mean_mean/100-273.15,y=hierarchy))+
geom_label(aes(label=country))
library(rnaturalearth)
library(rnaturalearthdata)
world <- ne_countries(scale = "medium", returnclass = "sf") %>% filter(continent != "Antarctica" )
world <- world %>% mutate(country = stringr::str_to_lower(iso_a3)) %>% full_join(df.allzip.schwartz.aggr)
ggplot(data = world, aes(fill=intel_auton)) +
geom_sf(color=NA, linewidth=NA)+
scale_fill_viridis_c(option="inferno")+theme_minimal()
ggplot(data = world, aes(fill=ASTER_temp_mean_mean)) +
geom_sf(color=NA, linewidth=NA)+
scale_fill_viridis_c(option="inferno")+theme_minimal()
corrplot::corrplot(cor(df.allzip.schwartz.aggr %>% select_if(is.numeric), use = "complete.obs"))
ggplot(data = world, aes(fill=ASTER_ndvi_mean_mean)) +
geom_sf(color=NA, linewidth=NA)+
scale_fill_viridis_c(option="inferno")+theme_minimal()
cor.test(df.allzip.schwartz.aggr$ASTER_ndvi_mean_mean, df.allzip.schwartz.aggr$intel_auton, use = "complete.obs")
ggplot(df.allzip.schwartz.aggr, aes(x=ASTER_ndvi_mean_mean,y=hierarchy))+
geom_label(aes(label=country))
ggplot(df.allzip.schwartz.aggr, aes(x=ASTER_ndvi_mean_mean,y=intel_auton))+
geom_label(aes(label=country))
mean(4.4,3.94)
mean(c(4.4,3.94))
mean(c(3.04,3.34))
mean(c(2.06,2.42))
mean(c(3.74,3.97))
mean(c(4.33,4.24))
mean(c(5.32,4.66))
mean(c(5.06,4.92))
df.schwartz <-vroom::vroom("Z:/Projekte/schwartz/cultvalueorientationscores2.csv")
df.allzip.schwartz <- df.schwartz %>% inner_join(df.countrylist) %>% inner_join(df.allzip)
df.allzip.schwartz.aggr <- df.allzip.schwartz %>% group_by(country) %>%
dplyr::select(matches("^ASTER.*_mean$|^SRTM.*_mean$|harmony|embedded|hierarchy|mastery|egalitar|aff_auton|intel_auto")) %>%
summarise_all(funs(mean(., na.rm = TRUE))) %>%
filter(!is.na(country)) %>%
filter(country != "nzl")
df.allzip.schwartz.aggr %>% distinct(country) %>% View()
cor.test(df.allzip.schwartz.aggr$SRTM_zip_elevation_mean, df.allzip.schwartz.aggr$harmony, use = "complete.obs")
cor.test(df.allzip.schwartz.aggr$ASTER_ndvi_mean_mean, df.allzip.schwartz.aggr$intel_auton, use = "complete.obs")
df.allzip.schwartz.aggr %>% distinct(country) %>% View()
corrplot::corrplot(cor(df.allzip.schwartz.aggr %>% select_if(is.numeric), use = "complete.obs"))
library(ggplot2)
ggplot(df.allzip.schwartz.aggr, aes(x=ASTER_temp_mean_mean/100-273.15,y=intel_auton))+
geom_label(aes(label=country))
df.allzip.schwartz.aggr %>% distinct(country) %>% View()
df.schwartz <-vroom::vroom("Z:/Projekte/schwartz/cultvalueorientationscores2.csv")
df.countrylist <- tibble(countrycode = countrycode::codelist$iso2c, country=stringr::str_to_lower(countrycode::codelist$iso3c))
df.allzip.schwartz <- df.schwartz %>% inner_join(df.countrylist) %>% inner_join(df.allzip)
df.allzip.schwartz.aggr <- df.allzip.schwartz %>% group_by(country) %>%
dplyr::select(matches("^ASTER.*_mean$|^SRTM.*_mean$|harmony|embedded|hierarchy|mastery|egalitar|aff_auton|intel_auto")) %>%
summarise_all(funs(mean(., na.rm = TRUE))) %>%
filter(!is.na(country)) %>%
filter(country != "nzl")
cor.test(df.allzip.schwartz.aggr$SRTM_zip_elevation_mean, df.allzip.schwartz.aggr$harmony, use = "complete.obs")
cor.test(df.allzip.schwartz.aggr$ASTER_ndvi_mean_mean, df.allzip.schwartz.aggr$intel_auton, use = "complete.obs")
df.allzip.schwartz.aggr %>% distinct(country) %>% View()
corrplot::corrplot(cor(df.allzip.schwartz.aggr %>% select_if(is.numeric), use = "complete.obs"))
library(ggplot2)
ggplot(df.allzip.schwartz.aggr, aes(x=ASTER_temp_mean_mean/100-273.15,y=intel_auton))+
geom_label(aes(label=country))
ggplot(df.allzip.schwartz.aggr, aes(x=ASTER_temp_mean_mean/100-273.15,y=embedded))+
geom_label(aes(label=country))
ggplot(df.allzip.schwartz.aggr, aes(x=ASTER_temp_mean_mean/100-273.15,y=hierarchy))+
geom_label(aes(label=country))
ggplot(df.allzip.schwartz.aggr, aes(x=ASTER_ndvi_mean_mean,y=intel_auton))+
geom_label(aes(label=country))
library(rnaturalearth)
library(rnaturalearthdata)
world <- ne_countries(scale = "medium", returnclass = "sf") %>% filter(continent != "Antarctica" )
world <- world %>% mutate(country = stringr::str_to_lower(iso_a3)) %>% full_join(df.allzip.schwartz.aggr)
ggplot(data = world, aes(fill=intel_auton)) +
geom_sf(color=NA, linewidth=NA)+
scale_fill_viridis_c(option="inferno")+theme_minimal()
df.schwartz <-vroom::vroom("Z:/Projekte/schwartz/cultvalueorientationscores2.csv")
df.countrylist <- tibble(countrycode = countrycode::codelist$iso2c, country=stringr::str_to_lower(countrycode::codelist$iso3c))
df.allzip.schwartz <- df.schwartz %>% inner_join(df.countrylist) %>% inner_join(df.allzip)
df.allzip.schwartz.aggr <- df.allzip.schwartz %>% group_by(country) %>%
dplyr::select(matches("^ASTER.*_mean$|^SRTM.*_mean$|harmony|embedded|hierarchy|mastery|egalitar|aff_auton|intel_auto")) %>%
summarise_all(funs(mean(., na.rm = TRUE))) %>%
filter(!is.na(country)) %>%
filter(country != "nzl")
cor.test(df.allzip.schwartz.aggr$SRTM_zip_elevation_mean, df.allzip.schwartz.aggr$harmony, use = "complete.obs")
cor.test(df.allzip.schwartz.aggr$ASTER_ndvi_mean_mean, df.allzip.schwartz.aggr$intel_auton, use = "complete.obs")
df.allzip.schwartz.aggr %>% distinct(country) %>% View()
df.schwartz <-vroom::vroom("Z:/Projekte/schwartz/cultvalueorientationscores2.csv")
df.countrylist <- tibble(countrycode = countrycode::codelist$iso2c, country=stringr::str_to_lower(countrycode::codelist$iso3c))
df.allzip.schwartz <- df.schwartz %>% inner_join(df.countrylist) %>% inner_join(df.allzip)
df.allzip.schwartz.aggr <- df.allzip.schwartz %>% group_by(country) %>%
dplyr::select(matches("^ASTER.*_mean$|^SRTM.*_mean$|harmony|embedded|hierarchy|mastery|egalitar|aff_auton|intel_auto")) %>%
summarise_all(funs(mean(., na.rm = TRUE))) %>%
filter(!is.na(country)) %>%
filter(country != "nzl")
cor.test(df.allzip.schwartz.aggr$SRTM_zip_elevation_mean, df.allzip.schwartz.aggr$harmony, use = "complete.obs")
cor.test(df.allzip.schwartz.aggr$ASTER_ndvi_mean_mean, df.allzip.schwartz.aggr$intel_auton, use = "complete.obs")
df.allzip.schwartz.aggr %>% distinct(country) %>% View()
library(ggplot2)
ggplot(df.allzip.schwartz.aggr, aes(x=ASTER_temp_mean_mean/100-273.15,y=intel_auton))+
geom_label(aes(label=country))
ggplot(df.allzip.schwartz.aggr, aes(x=ASTER_temp_mean_mean/100-273.15,y=embedded))+
geom_label(aes(label=country))
ggplot(df.allzip.schwartz.aggr, aes(x=ASTER_temp_mean_mean/100-273.15,y=hierarchy))+
geom_label(aes(label=country))
ggplot(df.allzip.schwartz.aggr, aes(x=ASTER_ndvi_mean_mean,y=intel_auton))+
geom_label(aes(label=country))
library(rnaturalearth)
library(rnaturalearthdata)
world <- ne_countries(scale = "medium", returnclass = "sf") %>% filter(continent != "Antarctica" )
world <- world %>% mutate(country = stringr::str_to_lower(iso_a3)) %>% full_join(df.allzip.schwartz.aggr)
ggplot(data = world, aes(fill=intel_auton)) +
geom_sf(color=NA, linewidth=NA)+
scale_fill_viridis_c(option="inferno")+theme_minimal()
ggplot(data = world, aes(fill=ASTER_temp_mean_mean)) +
geom_sf(color=NA, linewidth=NA)+
scale_fill_viridis_c(option="inferno")+theme_minimal()
ggplot(data = world, aes(fill=ASTER_ndvi_mean_mean)) +
geom_sf(color=NA, linewidth=NA)+
scale_fill_viridis_c(option="inferno")+theme_minimal()
corrplot::corrplot(cor(df.allzip.schwartz.aggr %>% select_if(is.numeric), use = "complete.obs"))
df.allzip.schwartz.aggr <- df.allzip.schwartz %>% group_by(country) %>%
dplyr::select(matches("^ASTER.*_mean$|^ASTER.*_sd$|^SRTM.*_mean$|^SRTM.*_sd$|harmony|embedded|hierarchy|mastery|egalitar|aff_auton|intel_auto")) %>%
summarise_all(funs(mean(., na.rm = TRUE))) %>%
filter(!is.na(country)) %>%
filter(country != "nzl")
cor.test(df.allzip.schwartz.aggr$SRTM_zip_elevation_mean, df.allzip.schwartz.aggr$harmony, use = "complete.obs")
cor.test(df.allzip.schwartz.aggr$ASTER_ndvi_mean_mean, df.allzip.schwartz.aggr$intel_auton, use = "complete.obs")
df.allzip.schwartz.aggr %>% distinct(country) %>% View()
cor.test(df.allzip.schwartz.aggr$SRTM_zip_elevation_mean, df.allzip.schwartz.aggr$harmony, use = "complete.obs")
cor.test(df.allzip.schwartz.aggr$ASTER_ndvi_mean_mean, df.allzip.schwartz.aggr$intel_auton, use = "complete.obs")
df.allzip.schwartz.aggr %>% distinct(country) %>% View()
corrplot::corrplot(cor(df.allzip.schwartz.aggr %>% select_if(is.numeric), use = "complete.obs"))
ggplot(df.allzip.schwartz.aggr, aes(x=ASTER_zip_elevation_sd,y=intel_auton))+
geom_label(aes(label=country))
ggplot(df.allzip.schwartz.aggr, aes(x=SRTM_zip_elevation_sd,y=intel_auton))+
geom_label(aes(label=country))
lmer(intel_auton ~ ASTER_ndvi_mean_mean + ASTER_temp_mean_mean + SRTM_zip_elevation_sd, data=df.allzip.schwartz.aggr)
lme(intel_auton ~ ASTER_ndvi_mean_mean + ASTER_temp_mean_mean + SRTM_zip_elevation_sd, data=df.allzip.schwartz.aggr)
lm(intel_auton ~ ASTER_ndvi_mean_mean + ASTER_temp_mean_mean + SRTM_zip_elevation_sd, data=df.allzip.schwartz.aggr)
m1 <- lm(intel_auton ~ ASTER_ndvi_mean_mean + ASTER_temp_mean_mean + SRTM_zip_elevation_sd, data=df.allzip.schwartz.aggr)
summary(m1)
m1
summary(m1)
ggplot(data = world, aes(fill=ASTER_ndvi_mean_mean)) +
geom_sf(color=NA, linewidth=NA)+
scale_fill_viridis_c(option="inferno")+theme_minimal()
library(randomForest)
sample(2, nrow(df.allzip.schwartz.aggr), replace = TRUE, prob = c(0.7, 0.3))
ind <- sample(2, nrow(df.allzip.schwartz.aggr), replace = TRUE, prob = c(0.7, 0.3))
train <- df.allzip.schwartz.aggr[ind==1,]
test <- df.allzip.schwartz.aggr[ind==2,]
rf <- randomForest(intel_auton~., data=train, proximity=TRUE) print(rf)
rf <- randomForest(intel_auton~., data=train, proximity=TRUE)
print(rf)
p1 <- predict(rf, train)
confusionMatrix(p1, train$ Species)
confusionMatrix
caret::confusionMatrix(p1, train$ Species)
train
train$intel_auton
caret::confusionMatrix(p1, train$intel_auton)
hist(treesize(rf),
main = "No. of Nodes for the Trees",
col = "green")
#Variable Importance
varImpPlot(rf,
sort = T,
n.var = 10,
main = "Top 10 - Variable Importance")
importance(rf)
#Variable Importance
varImpPlot(rf,
sort = T,
n.var = 10,
main = "Top 10 - Variable Importance")
df.allzip.schwartz.aggr
train <- df.allzip.schwartz.aggr[ind==1,] %>% select(c(6:22))
test <- df.allzip.schwartz.aggr[ind==2,]  %>% select(c(6:22))
rf <- randomForest(intel_auton~., data=train, proximity=TRUE)
print(rf)
hist(treesize(rf),
main = "No. of Nodes for the Trees",
col = "green")
#Variable Importance
varImpPlot(rf,
sort = T,
n.var = 10,
main = "Top 10 - Variable Importance")
train <- df.allzip.schwartz.aggr[ind==1,] %>% select(c(8:22))
test <- df.allzip.schwartz.aggr[ind==2,]  %>% select(c(8:22))
rf <- randomForest(intel_auton~., data=train, proximity=TRUE)
print(rf)
hist(treesize(rf),
main = "No. of Nodes for the Trees",
col = "green")
#Variable Importance
varImpPlot(rf,
sort = T,
n.var = 10,
main = "Top 10 - Variable Importance")
df.allzip.schwartz.aggr[ind==1,] %>% select(c(8:22))
train <- df.allzip.schwartz.aggr[ind==1,] %>% select(c(9:22))
test <- df.allzip.schwartz.aggr[ind==2,]  %>% select(c(9:22))
train
train <- df.allzip.schwartz.aggr[ind==1,] %>% select(c(7,9:22))
test <- df.allzip.schwartz.aggr[ind==2,]  %>% select(c(7,9:22))
train
rf <- randomForest(intel_auton~., data=train, proximity=TRUE)
print(rf)
hist(treesize(rf),
main = "No. of Nodes for the Trees",
col = "green")
#Variable Importance
varImpPlot(rf,
sort = T,
n.var = 10,
main = "Top 10 - Variable Importance")
importance(rf)
#Variable Importance
varImpPlot(rf,
sort = T,
n.var = 10,
main = "Top 10 - Variable Importance")
ind <- sample(2, nrow(df.allzip.schwartz.aggr), replace = TRUE, prob = c(0.7, 0.3))
train <- df.allzip.schwartz.aggr[ind==1,] %>% select(c(7,9:22))
test <- df.allzip.schwartz.aggr[ind==2,]  %>% select(c(7,9:22))
rf <- randomForest(intel_auton~., data=train, proximity=TRUE)
print(rf)
hist(treesize(rf),
main = "No. of Nodes for the Trees",
col = "green")
#Variable Importance
varImpPlot(rf,
sort = T,
n.var = 10,
main = "Top 10 - Variable Importance")
importance(rf)
# installation of prettymapr
devtools::load_all(path = "../prettymapr") # important for font path
p <- plot_map(osm_object, color, scaling)
p
# installation of prettymapr
devtools::load_all(path = "../prettymapr") # important for font path
p <- plot_map(osm_object, color, scaling)
p
save_map(p, "C:/Users/David.Willinger/Documents/postcards/", osm_object, scaling, color, "A4_circle")
# installation of prettymapr
devtools::load_all(path = "../prettymapr") # important for font path
p <- plot_map(osm_object, color, scaling)
p
save_map(p, "C:/Users/David.Willinger/Documents/postcards/", osm_object, scaling, color, "A4")
# installation of prettymapr
devtools::load_all(path = "../prettymapr") # important for font path
# installation of prettymapr
devtools::load_all(path = "../prettymapr") # important for font path
p <- plot_map(osm_object, color, scaling, TRUE)
p
save_map(p, "C:/Users/David.Willinger/Documents/postcards/", osm_object, scaling, color, "A4_circle")
save_map(p, "C:/Users/David.Willinger/Documents/postcards/", osm_object, scaling, color, "A4_circle")
# installation of prettymapr
devtools::load_all(path = "../prettymapr") # important for font path
p <- plot_map(osm_object, color, scaling, TRUE)
p
save_map(p, "C:/Users/David.Willinger/Documents/postcards/", osm_object, scaling, color, "A4_circle")
scaling
# installation of prettymapr
devtools::load_all(path = "../prettymapr") # important for font path
p <- plot_map(osm_object, color, scaling, TRUE)
p
save_map(p, "C:/Users/David.Willinger/Documents/postcards/", osm_object, scaling, color, "A4_circle")
scaling
scaling/2
# installation of prettymapr
devtools::load_all(path = "../prettymapr") # important for font path
p <- plot_map(osm_object, color, scaling, F)
p
save_map(p, "C:/Users/David.Willinger/Documents/postcards/", osm_object, scaling, color, "A4")
save_map(p, "C:/Users/David.Willinger/Documents/postcards/", osm_object, scaling, color, "A4")
# installation of prettymapr
devtools::load_all(path = "../prettymapr") # important for font path
p <- plot_map(osm_object, color, scaling, F)
save_map(p, "C:/Users/David.Willinger/Documents/postcards/", osm_object, scaling, color, "A4")
# installation of prettymapr
devtools::load_all(path = "../prettymapr") # important for font path
p <- plot_map(osm_object, color, scaling, F)
save_map(p, "C:/Users/David.Willinger/Documents/postcards/", osm_object, scaling, color, "A4")
# installation of prettymapr
devtools::load_all(path = "../prettymapr") # important for font path
p <- plot_map(osm_object, color, scaling, T)
save_map(p, "C:/Users/David.Willinger/Documents/postcards/", osm_object, scaling, color, "A4_circle")
scaling <- get_scaling("A4")
scaling
scaling <- get_scaling("A3")
scaling
p <- plot_map(osm_object, color, scaling, T)
p
save_map(p, "C:/Users/David.Willinger/Documents/postcards/", osm_object, scaling, color, "A4_circle")
save_map(p, "C:/Users/David.Willinger/Documents/postcards/", osm_object, scaling, color, "A4_circle")
# installation of prettymapr
devtools::load_all(path = "../prettymapr") # important for font path
scaling <- get_scaling("A4")
scaling
p <- plot_map(osm_object, color, scaling, T)
save_map(p, "C:/Users/David.Willinger/Documents/postcards/", osm_object, scaling, color, "A4_circle")
color <- get_theme("bwinv", "Poppins")
scaling <- get_scaling("A4")
p <- plot_map(osm_object, color, scaling, F)
save_map(p, "C:/Users/David.Willinger/Documents/postcards/", osm_object, scaling, color, "A4")
# installation of prettymapr
devtools::load_all(path = "../prettymapr") # important for font path
p <- plot_map(osm_object, color, scaling, F)
save_map(p, "C:/Users/David.Willinger/Documents/postcards/", osm_object, scaling, color, "A4")
color <- get_theme("berlin", "Poppins")
scaling <- get_scaling("A4")
p <- plot_map(osm_object, color, scaling, F)
save_map(p, "C:/Users/David.Willinger/Documents/postcards/", osm_object, scaling, color, "A4")
save_map(p, "C:/Users/David.Willinger/Documents/postcards/", osm_object, scaling, color, "A4")
color <- get_theme("bwinv", "Poppins")
scaling <- get_scaling("A4")
# installation of prettymapr
devtools::load_all(path = "../prettymapr") # important for font path
p <- plot_map(osm_object, color, scaling, F)
p
save_map(p, "C:/Users/David.Willinger/Documents/postcards/", osm_object, scaling, color, "A4")
p <- plot_map(osm_object, color, scaling, T)
p
save_map(p, "C:/Users/David.Willinger/Documents/postcards/", osm_object, scaling, color, "A4_circle")
p
