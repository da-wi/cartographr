[{"path":"https://da-wi.github.io/cartographr/articles/cartographr.html","id":"basic-workflow","dir":"Articles","previous_headings":"","what":"Basic workflow","title":"Introduction to cartographr","text":"Define WGS84 coordinates center, well extend map meters. example, create plot Vienna geographical center latitude = 48.210 longitude = 16.371. coordinates can found e.g. web. Typically, set (globally defined) output size scaling text linewidth geometries map scaled according final output size map. ensures printing different output sizes always scales lines text proportionally. Next, retrieve openstreet map data get_osmdata(). , width 1200 meters set map x_distance parameter. height map automatically calculated aspect ratio output size omitted. osm object list geometrical shapes stored (buildings, rivers, parks, …). map can simply created using plot_map() function. Additionally, can directly set appearance map using themes. , decide making poster Vienna using theme_poster(). also different color palettes map, look get_palette() get idea color palettes exist create color palette.  Lastly, can save map ready--print pdf using save_map(). prefer bitmap format, can also directly call ggsave() ggplot2() package.","code":"cartographr::set_output_size(\"A4\") osm <- get_osmdata(48.210, 16.371, x_distance = 1200) plot_vienna <- osm |> plot_map(palette = \"barcelona\") +   theme_poster_poppins() +   labs(title=\"vienna\")  plot_vienna save_map(plot = plot.vienna, filename=paste0(\"vienna_a4.pdf\")) ggsave(paste0(\"~/vienna_a4.png\"),        plot = plot.vienna,        bg = \"white\",        device = \"png\",        dpi = 96,        width = 210,        height = 297,        units = \"mm\")"},{"path":"https://da-wi.github.io/cartographr/articles/creating-an-annotated-map.html","id":"convert-longitude-latitude-into-a-sf","dir":"Articles","previous_headings":"","what":"Convert longitude / latitude into a sf","title":"Creating an annotated map","text":"add crime locations dataset map, harness sf (simple features) package, includes lot useful tools working geo data. end, convert dataset sf object using latitude longitude. can achieved function sf::st_as_sf() using coordinates dataset.","code":"df_crime <- crime |>   st_as_sf(coords = c(\"longitude\", \"latitude\"), crs=4326, remove = F) |>  filter(date >= \"2023-01-01\" & date < \"2024-01-01\")  df_crime |> head() #> Simple feature collection with 6 features and 4 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -74.00257 ymin: 40.71537 xmax: -73.96558 ymax: 40.78731 #> Geodetic CRS:  WGS 84 #>                  date latitude longitude      type                   geometry #> 1 2023-11-14 09:00:00 40.74311 -73.98740    FELONY  POINT (-73.9874 40.74311) #> 2 2023-06-14 21:59:00 40.77014 -73.96559    FELONY POINT (-73.96559 40.77014) #> 3 2023-02-15 15:00:00 40.78731 -73.97820    FELONY  POINT (-73.9782 40.78731) #> 4 2023-12-31 22:30:00 40.73283 -73.99120    FELONY  POINT (-73.9912 40.73283) #> 5 2023-12-05 09:30:00 40.71537 -74.00257 VIOLATION POINT (-74.00257 40.71537) #> 6 2023-12-31 18:00:00 40.78075 -73.97265    FELONY POINT (-73.97265 40.78075)"},{"path":"https://da-wi.github.io/cartographr/articles/creating-an-annotated-map.html","id":"setup-the-map-parameters","dir":"Articles","previous_headings":"","what":"Setup the map parameters","title":"Creating an annotated map","text":"provide longitude, latitude x_distance (.e., width map meters). Furthermore, define extend OSM data meters get_osmdata(). y_distance calculated automatically using output size aspect ratio.","code":"set_output_size(\"A3\", orientation = \"portrait\") osm <- get_osmdata(lat = 40.711, lon =-74.009, x_distance =  1300)"},{"path":"https://da-wi.github.io/cartographr/articles/creating-an-annotated-map.html","id":"plot-the-map","dir":"Articles","previous_headings":"","what":"Plot the map","title":"Creating an annotated map","text":"plot_map() generates ggplot2 object using color theme set parameter. means can easily adjust plot using ggplot2 commands also add new information map.","code":"p <- osm |> plot_map(palette = \"metropolitan\")  +   # add geom with crimes   geom_point(data = suppressMessages(sf::st_intersection(df_crime, osm$bbox |> sf::st_as_sfc())),              aes(x = longitude, y = latitude, shape = type), color=\"#222424\", size=2) +    theme_infomap_barlow() +    # Set labels   labs(title = \"NEW YORK CRIME (2023)\",        shape = \"TYPE\")  p"},{"path":"https://da-wi.github.io/cartographr/articles/creating-an-annotated-map.html","id":"save-map","dir":"Articles","previous_headings":"","what":"Save map","title":"Creating an annotated map","text":"save_map() can used store print-ready plot object disk drawn object pdf format.","code":"save_map(plot = p, filename = \"~/ny_crime.pdf\")"},{"path":"https://da-wi.github.io/cartographr/articles/creating-posters.html","id":"setup-the-map-parameters-","dir":"Articles","previous_headings":"","what":"Setup the map parameters.","title":"Creating multiple posters","text":"provide longitude, latitude. Furthermore, define extend OSM data meters get_osmdata. , use map width 1200 m. Also, example create several instances different maps (cities). defined input data, can feed get_osmdata() function.","code":"cartographr::set_output_size(\"A6\")  df_coords <- tibble(lat = c(48.873, 53.545,47.374),        lon = c(2.2950,10.000,8.538),        x_distance = rep(1200,3),        name = c(\"paris\",\"hamburg\",\"zürich\"),        color = c(\"tropical\",\"autumn\", \"imhof\"))  df_coords |> head() #> # A tibble: 3 × 5 #>     lat   lon x_distance name    color    #>   <dbl> <dbl>      <dbl> <chr>   <chr>    #> 1  48.9  2.30       1200 paris   tropical #> 2  53.5 10          1200 hamburg autumn   #> 3  47.4  8.54       1200 zürich  imhof df_coords <- df_coords |>    # create rowwise() grouping   rowwise() |>   # retrieve osm data   mutate(osm = list(get_osmdata(lat, lon, x_distance)))  df_coords |> head() #> # A tibble: 3 × 6 #> # Rowwise:  #>     lat   lon x_distance name    color    osm               #>   <dbl> <dbl>      <dbl> <chr>   <chr>    <list>            #> 1  48.9  2.30       1200 paris   tropical <named list [13]> #> 2  53.5 10          1200 hamburg autumn   <named list [13]> #> 3  47.4  8.54       1200 zürich  imhof    <named list [13]>"},{"path":"https://da-wi.github.io/cartographr/articles/creating-posters.html","id":"plot-map","dir":"Articles","previous_headings":"","what":"Plot map","title":"Creating multiple posters","text":"Now, create ggplot2 objects city osm list.","code":"df_coords <- df_coords |>    mutate(output = list(     plot_map(osm, palette = color)+     theme_poster_poppins()+      ggplot2::theme(plot.background = ggplot2::element_rect(fill=\"#FFFFFE\",                                                    color=\"#AAAAAA\"))+     ggplot2::labs(title = name)     )   ) # Print out the first poster df_coords$output[[1]] # Print out the second poster df_coords$output[[2]] # Print out the third poster df_coords$output[[3]]"},{"path":"https://da-wi.github.io/cartographr/articles/creating-posters.html","id":"save-posters","dir":"Articles","previous_headings":"","what":"Save posters","title":"Creating multiple posters","text":"","code":"df_coords |>      mutate(res = save_map(plot = output,                           filename = paste0(\"~/postcards/\",name,\"_A6_\",color,\".pdf\")))"},{"path":"https://da-wi.github.io/cartographr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"David Willinger. Author, maintainer, copyright holder.","code":""},{"path":"https://da-wi.github.io/cartographr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Willinger D (2024). cartographr: Create print-ready maps R ggplot2 based OSM data. R package version 0.1, https://github.com/da-wi/cartographr, https://da-wi.github.io/cartographr.","code":"@Manual{,   title = {cartographr: Create print-ready maps with R and ggplot2 based on OSM data},   author = {David Willinger},   year = {2024},   note = {R package version 0.1, https://github.com/da-wi/cartographr},   url = {https://da-wi.github.io/cartographr}, }"},{"path":[]},{"path":"https://da-wi.github.io/cartographr/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Create print-ready maps with R and ggplot2 based on OSM data","text":"cartographr designed streamline process creating visually appealing, print-ready maps OpenStreetMap data. serves powerful tool users looking represent base maps overlay additional information layers, much like familiar ggplot2 syntax. package simplifies complex task map-making handling intricacies spatial data cartographic aesthetics, allowing users focus storytelling aspect maps. Whether urban planning, environmental studies, public presentations, package offers convenient flexible way transform raw geospatial data informative, publication-quality visualizations, enhancing communication spatial information broad audience.","code":""},{"path":"https://da-wi.github.io/cartographr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Create print-ready maps with R and ggplot2 based on OSM data","text":"Simply install github.","code":"devtools::install_github(\"da-wi/cartographr\")"},{"path":"https://da-wi.github.io/cartographr/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Create print-ready maps with R and ggplot2 based on OSM data","text":"basic workflow consists Retrieving openstreet map data given area: Plot map Customize map explore visualization options plot_map() function, ’re empowered enhance maps additional layers data using ggplot2, tailoring final product specific needs. function’s flexibility allows select variety preset color palettes themes best suit project’s requirements, can craft unique aesthetic creating . adaptability makes ideal choice anyone looking present information map way informative visually engaging.","code":"osm <- get_osmdata(lat =  36.188, lon = -115.176, x_distance = 1000) osm |> plot_map() osm |> plot_map(palette = \"arctic\") +   geom_sf(data = location_tracking, aes(color = species)) +   theme_infomap()"},{"path":"https://da-wi.github.io/cartographr/index.html","id":"data-licensing","dir":"","previous_headings":"","what":"Data licensing","title":"Create print-ready maps with R and ggplot2 based on OSM data","text":"data access using cartographr , consequence, osmdata licensed OpenStreetMap’s license, Open Database Licence. derived data products must also carry licence. make sure understand licence publishing derived datasets.","code":""},{"path":"https://da-wi.github.io/cartographr/index.html","id":"getting-help","dir":"","previous_headings":"","what":"Getting help","title":"Create print-ready maps with R and ggplot2 based on OSM data","text":"encounter clear bug, please file issue minimal reproducible example GitHub.","code":""},{"path":"https://da-wi.github.io/cartographr/reference/add_acknowledgments.html","id":null,"dir":"Reference","previous_headings":"","what":"Add acknowledgments — add_acknowledgments","title":"Add acknowledgments — add_acknowledgments","text":"Add acknowledgments","code":""},{"path":"https://da-wi.github.io/cartographr/reference/add_acknowledgments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add acknowledgments — add_acknowledgments","text":"","code":"add_acknowledgments()"},{"path":"https://da-wi.github.io/cartographr/reference/add_acknowledgments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add acknowledgments — add_acknowledgments","text":"labs","code":""},{"path":"https://da-wi.github.io/cartographr/reference/adjust_display.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjust display — adjust_display","title":"Adjust display — adjust_display","text":"function adjust displays called last adding geoms","code":""},{"path":"https://da-wi.github.io/cartographr/reference/adjust_display.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjust display — adjust_display","text":"","code":"adjust_display(osm_object)"},{"path":"https://da-wi.github.io/cartographr/reference/adjust_display.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjust display — adjust_display","text":"osm_object osm_object stored bbox","code":""},{"path":"https://da-wi.github.io/cartographr/reference/cartographr_env.html","id":null,"dir":"Reference","previous_headings":"","what":"Package Configuration Environment — cartographr_env","title":"Package Configuration Environment — cartographr_env","text":"environment stores configuration settings package. initialized package loaded can modified using set_*() functions.","code":""},{"path":"https://da-wi.github.io/cartographr/reference/cartographr_env.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Package Configuration Environment — cartographr_env","text":"","code":"cartographr_env"},{"path":"https://da-wi.github.io/cartographr/reference/cartographr_env.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Package Configuration Environment — cartographr_env","text":"object class environment length 4.","code":""},{"path":"https://da-wi.github.io/cartographr/reference/crime.html","id":null,"dir":"Reference","previous_headings":"","what":"Manhattan crime dataset — crime","title":"Manhattan crime dataset — crime","text":"dataset includes valid felony, misdemeanor, violation crimes reported New York City Police Department (NYPD) Manhattan 2004. https://catalog.data.gov/.","code":""},{"path":"https://da-wi.github.io/cartographr/reference/crime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manhattan crime dataset — crime","text":"","code":"crime"},{"path":"https://da-wi.github.io/cartographr/reference/crime.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Manhattan crime dataset — crime","text":"object class data.frame 31620 rows 4 columns.","code":""},{"path":"https://da-wi.github.io/cartographr/reference/cutout.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocessing of a circular map — cutout","title":"Preprocessing of a circular map — cutout","text":"function uses sensible defaults remove unnecessary data osm object","code":""},{"path":"https://da-wi.github.io/cartographr/reference/cutout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocessing of a circular map — cutout","text":"","code":"cutout(osm, boundary = \"rect\")"},{"path":"https://da-wi.github.io/cartographr/reference/cutout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocessing of a circular map — cutout","text":"osm osm_object stored bbox","code":""},{"path":"https://da-wi.github.io/cartographr/reference/cutout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocessing of a circular map — cutout","text":"preprocessed osm object","code":""},{"path":"https://da-wi.github.io/cartographr/reference/dot-plot_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a map — .plot_map","title":"Plot a map — .plot_map","text":"function plots map","code":""},{"path":"https://da-wi.github.io/cartographr/reference/dot-plot_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a map — .plot_map","text":"","code":".plot_map(osm, palette = \"imhof\")"},{"path":"https://da-wi.github.io/cartographr/reference/dot-plot_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a map — .plot_map","text":"osm OSM object plot palette Color theme applied plot","code":""},{"path":"https://da-wi.github.io/cartographr/reference/get_border.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate rectengular border given the coordinates — get_border","title":"Calculate rectengular border given the coordinates — get_border","text":"function calculates correct borders","code":""},{"path":"https://da-wi.github.io/cartographr/reference/get_border.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate rectengular border given the coordinates — get_border","text":"","code":"get_border(lat, lon, offlat, offlon)"},{"path":"https://da-wi.github.io/cartographr/reference/get_border.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate rectengular border given the coordinates — get_border","text":"lat Latitude WSG84 lon Latitude WSG84 offlat offset Latitude offlon offset Longitude","code":""},{"path":"https://da-wi.github.io/cartographr/reference/get_border.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate rectengular border given the coordinates — get_border","text":"border map Coordinates","code":""},{"path":"https://da-wi.github.io/cartographr/reference/get_circle.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate bounding circle — get_circle","title":"Generate bounding circle — get_circle","text":"function generates bounding circle","code":""},{"path":"https://da-wi.github.io/cartographr/reference/get_circle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate bounding circle — get_circle","text":"","code":"get_circle(lat, lon, y_distance, x_distance)"},{"path":"https://da-wi.github.io/cartographr/reference/get_circle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate bounding circle — get_circle","text":"lat Latitude WGS84 lon Longitude WGS84 y_distance Y distance meters x_distance X distance meters","code":""},{"path":"https://da-wi.github.io/cartographr/reference/get_circle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate bounding circle — get_circle","text":"circle","code":""},{"path":"https://da-wi.github.io/cartographr/reference/get_hexagon.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate bounding hexagon — get_hexagon","title":"Generate bounding hexagon — get_hexagon","text":"function generates bounding hexagon","code":""},{"path":"https://da-wi.github.io/cartographr/reference/get_hexagon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate bounding hexagon — get_hexagon","text":"","code":"get_hexagon(lat, lon, y_distance, x_distance)"},{"path":"https://da-wi.github.io/cartographr/reference/get_hexagon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate bounding hexagon — get_hexagon","text":"lat Latitude WGS84 lon Longitude WGS84 y_distance Y distance meters x_distance X distance meters","code":""},{"path":"https://da-wi.github.io/cartographr/reference/get_hexagon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate bounding hexagon — get_hexagon","text":"hexagon","code":""},{"path":"https://da-wi.github.io/cartographr/reference/get_osmdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve OSM data for urban environments — get_osmdata","title":"Retrieve OSM data for urban environments — get_osmdata","text":"function retrieves OSM data sensible defaults cities","code":""},{"path":"https://da-wi.github.io/cartographr/reference/get_osmdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve OSM data for urban environments — get_osmdata","text":"","code":"get_osmdata(   lat,   lon,   x_distance = NULL,   y_distance = NULL,   aspect_ratio = NULL,   quiet = F )"},{"path":"https://da-wi.github.io/cartographr/reference/get_osmdata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve OSM data for urban environments — get_osmdata","text":"lat Latitude WGS84 lon Longitude WGS84 x_distance X distance meters y_distance Y distance meters aspect_ratio aspect ratio width height","code":""},{"path":"https://da-wi.github.io/cartographr/reference/get_osmdata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve OSM data for urban environments — get_osmdata","text":"shapefiles buildings, streets, water, beaches, greens, ..","code":""},{"path":"https://da-wi.github.io/cartographr/reference/get_palette.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a color theme for maps — get_palette","title":"Create a color theme for maps — get_palette","text":"function creates color theme used plot_map(). can accept predefined palette name custom palette provided named list.","code":""},{"path":"https://da-wi.github.io/cartographr/reference/get_palette.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a color theme for maps — get_palette","text":"","code":"get_palette(palette)"},{"path":"https://da-wi.github.io/cartographr/reference/get_palette.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a color theme for maps — get_palette","text":"palette color palette use. Can one \"gray\", \"swiss\", \"evening\", \"midnight\", \"lines\", \"minimal\", \"bw\", \"arctic\", \"autumn\", \"autumn-muted\", \"desert\", \"metropolitan\", \"imhof\", \"alphabet\", \"tropical\", \"iberia\", named list custom palette. named list provided, contain color hex codes map element. NULL unrecognized name provided, function throw error.","code":""},{"path":"https://da-wi.github.io/cartographr/reference/get_palette.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a color theme for maps — get_palette","text":"list containing color settings map elements.","code":""},{"path":"https://da-wi.github.io/cartographr/reference/get_palette.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a color theme for maps — get_palette","text":"color moods predefined palettes follows: Gray: neutral balanced palette conveys sense calm sophistication. Swiss: clean orderly palette reflecting precision clarity Swiss design. Evening: deep moody palette captures tranquil reflective moments evening. Midnight: dark mysterious palette, perfect conveying stillness depth night. Lines (BW): stark classic black white palette, offering timeless elegant look. Minimal: minimalist palette focus simplicity clarity, using mostly white subtle grays. BW: black white palette warm undertone, providing vintage nostalgic feel. Arctic: cool refreshing palette evokes crisp pristine landscapes Arctic. Autumn: warm inviting palette captures rich vibrant colors fall season. Autumn Muted: softer take autumn palette, muted tones create cozy atmosphere. Desert: warm earthy palette inspired natural colors desert landscape. Metropolitan: sophisticated urban palette muted tones refined elegance. Imhof: palette inspired renowned cartographer Eduard Imhof, featuring earthy tones natural look. Alphabet: playful modern palette clean approachable aesthetic. Tropical: vibrant lively palette brings energetic colorful vibe tropical regions. Iberia: palette inspired warm rich colors Iberian Peninsula, full life energy.","code":""},{"path":"https://da-wi.github.io/cartographr/reference/get_palette.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a color theme for maps — get_palette","text":"","code":"if (FALSE) { # Standard usage with a character argument for a predefined palette plot_map(osm, palette = 'tropical')  # Custom palette creation using a named list for a simple black and white palette custom_palette <- list(   palette_building = c(\"#000000\", \"#FFFFFF\"),   water = \"#000000\",   green = \"#FFFFFF\",   beach = \"#000000\",   parking = \"#FFFFFF\",   street = \"#000000\",   background = \"#FFFFFF\",   railway = \"#000000\",   hatched = TRUE ) plot_map(osm, palette = custom_palette) }"},{"path":"https://da-wi.github.io/cartographr/reference/plot.cartographr_ggplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Custom ggplot Object — plot.cartographr_ggplot","title":"Plot Custom ggplot Object — plot.cartographr_ggplot","text":"function takes custom ggplot object, extracts ggplot object, retrieves bounding box (bbox) associated osm data, adjusts display printing plot.","code":""},{"path":"https://da-wi.github.io/cartographr/reference/plot.cartographr_ggplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Custom ggplot Object — plot.cartographr_ggplot","text":"","code":"# S3 method for cartographr_ggplot plot(x, ...)"},{"path":"https://da-wi.github.io/cartographr/reference/plot.cartographr_ggplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Custom ggplot Object — plot.cartographr_ggplot","text":"x custom ggplot object attribute \"osm\" containing osm data. ... Additional arguments passed print method.","code":""},{"path":"https://da-wi.github.io/cartographr/reference/plot.cartographr_ggplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Custom ggplot Object — plot.cartographr_ggplot","text":"function return value prints ggplot object.","code":""},{"path":"https://da-wi.github.io/cartographr/reference/plot_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a Map with custom palette — plot_map","title":"Plot a Map with custom palette — plot_map","text":"function takes osmdata (osm) object palette name, preprocesses map data already done, plots map using ggplot2 specified color palette.","code":""},{"path":"https://da-wi.github.io/cartographr/reference/plot_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a Map with custom palette — plot_map","text":"","code":"plot_map(osm, palette = \"imhof\")"},{"path":"https://da-wi.github.io/cartographr/reference/plot_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a Map with custom palette — plot_map","text":"osm list retrieved osmdata containing map data. palette character string specifying name palette use. default \"imhof\".","code":""},{"path":"https://da-wi.github.io/cartographr/reference/plot_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a Map with custom palette — plot_map","text":"ggplot object representing map chosen palette.","code":""},{"path":"https://da-wi.github.io/cartographr/reference/plot_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a Map with custom palette — plot_map","text":"","code":"if (FALSE) { # Assuming 'osm_data' is a preloaded OSM object plot_map(osm_data, palette = \"imhof\") }"},{"path":"https://da-wi.github.io/cartographr/reference/preprocess_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocessing map — preprocess_map","title":"Preprocessing map — preprocess_map","text":"function uses sensible defaults remove unnecessary data osm object sets output size printing.","code":""},{"path":"https://da-wi.github.io/cartographr/reference/preprocess_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocessing map — preprocess_map","text":"","code":"preprocess_map(osm)"},{"path":"https://da-wi.github.io/cartographr/reference/preprocess_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocessing map — preprocess_map","text":"osm osm_object stored bbox","code":""},{"path":"https://da-wi.github.io/cartographr/reference/preprocess_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocessing map — preprocess_map","text":"preprocessed osm object","code":""},{"path":"https://da-wi.github.io/cartographr/reference/print_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Print configuration details — print_config","title":"Print configuration details — print_config","text":"function prints configuration details stored current environment. iterates variables environment displays names values.","code":""},{"path":"https://da-wi.github.io/cartographr/reference/print_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print configuration details — print_config","text":"","code":"print_config()"},{"path":"https://da-wi.github.io/cartographr/reference/print_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print configuration details — print_config","text":"function return value; prints configuration details.","code":""},{"path":"https://da-wi.github.io/cartographr/reference/print_config.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print configuration details — print_config","text":"","code":"if (FALSE) { # Example usage: print_config() }"},{"path":"https://da-wi.github.io/cartographr/reference/save_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Save a Map to File — save_map","title":"Save a Map to File — save_map","text":"function saves ggplot object file using specified filename. checks orientation setting warns scale factor changed plot created.","code":""},{"path":"https://da-wi.github.io/cartographr/reference/save_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save a Map to File — save_map","text":"","code":"save_map(plot, filename)"},{"path":"https://da-wi.github.io/cartographr/reference/save_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save a Map to File — save_map","text":"plot ggplot object representing map saved. filename character string specifying path name file save plot .","code":""},{"path":"https://da-wi.github.io/cartographr/reference/save_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save a Map to File — save_map","text":"function saves plot file return anything.","code":""},{"path":"https://da-wi.github.io/cartographr/reference/save_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save a Map to File — save_map","text":"","code":"if (FALSE) { # Assuming 'map_plot' is a ggplot object and 'map.pdf' is the desired filename save_map(map_plot, \"map.pdf\") }"},{"path":"https://da-wi.github.io/cartographr/reference/set_acknowledgments.html","id":null,"dir":"Reference","previous_headings":"","what":"Set or Get Acknowledgments Setting — set_acknowledgments","title":"Set or Get Acknowledgments Setting — set_acknowledgments","text":"function sets new value acknowledgments setting cartographr environment retrieves current setting argument provided.","code":""},{"path":"https://da-wi.github.io/cartographr/reference/set_acknowledgments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set or Get Acknowledgments Setting — set_acknowledgments","text":"","code":"set_acknowledgments(ack = NULL)"},{"path":"https://da-wi.github.io/cartographr/reference/set_acknowledgments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set or Get Acknowledgments Setting — set_acknowledgments","text":"ack logical value set acknowledgments setting. NULL, current setting returned. default NULL.","code":""},{"path":"https://da-wi.github.io/cartographr/reference/set_acknowledgments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set or Get Acknowledgments Setting — set_acknowledgments","text":"ack NULL, returns current acknowledgments setting. ack logical value, function set acknowledgments setting value return invisibly.","code":""},{"path":"https://da-wi.github.io/cartographr/reference/set_acknowledgments.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set or Get Acknowledgments Setting — set_acknowledgments","text":"","code":"if (FALSE) { # To get the current acknowledgments setting set_acknowledgments()  # To set the acknowledgments setting to TRUE set_acknowledgments(TRUE) }"},{"path":"https://da-wi.github.io/cartographr/reference/set_output_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Output Size for cartography — set_output_size","title":"Set Output Size for cartography — set_output_size","text":"function sets output size cartographic displays. allows user specify standard paper size custom dimensions. size specified, returns current output size.","code":""},{"path":"https://da-wi.github.io/cartographr/reference/set_output_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Output Size for cartography — set_output_size","text":"","code":"set_output_size(size = NULL, orientation = \"portrait\")"},{"path":"https://da-wi.github.io/cartographr/reference/set_output_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Output Size for cartography — set_output_size","text":"size character string specifying standard paper size numeric vector custom dimensions (width, height). standard sizes can one \"A0\", \"A1\", \"A2\", \"A3\", \"A4\", \"A5\", \"A6\", \"small_poster\", \"medium_poster\", \"large_poster\". size NULL, current output size returned. orientation orientation output","code":""},{"path":"https://da-wi.github.io/cartographr/reference/set_output_size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Output Size for cartography — set_output_size","text":"size NULL, returns current output size numeric vector. size specified, function sets output size..","code":""},{"path":"https://da-wi.github.io/cartographr/reference/set_output_size.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set Output Size for cartography — set_output_size","text":"","code":"if (FALSE) { set_output_size(\"A3\") # Sets the output size to A3 dimensions set_output_size(c(300, 200)) # Sets a custom output size }"},{"path":"https://da-wi.github.io/cartographr/reference/theme_infomap.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Info Map Theme with Specified Font — theme_infomap","title":"Apply Info Map Theme with Specified Font — theme_infomap","text":"function applies custom theme information maps, allowing user specify font predefined list. sets various ggplot2 theme elements title, subtitle, caption, legend use specified font adjusts appearance based scale factor.","code":""},{"path":"https://da-wi.github.io/cartographr/reference/theme_infomap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Info Map Theme with Specified Font — theme_infomap","text":"","code":"theme_infomap(font = \"Poppins\")"},{"path":"https://da-wi.github.io/cartographr/reference/theme_infomap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Info Map Theme with Specified Font — theme_infomap","text":"font character string specifying font use theme elements. default \"Poppins\". \"Poppins\", \"Anton\", \"Cinzel\", \"Barlow\" valid options.","code":""},{"path":"https://da-wi.github.io/cartographr/reference/theme_infomap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Info Map Theme with Specified Font — theme_infomap","text":"ggplot2 theme object information map theme settings applied.","code":""},{"path":"https://da-wi.github.io/cartographr/reference/theme_infomap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply Info Map Theme with Specified Font — theme_infomap","text":"","code":"if (FALSE) { # Apply the info map theme with the default Poppins font to a ggplot object ggplot_object + theme_infomap()  # Apply the info map theme with the Anton font ggplot_object + theme_infomap(font = \"Anton\") }"},{"path":"https://da-wi.github.io/cartographr/reference/theme_infomap_anton.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply infomap Theme with Anton Font — theme_infomap_anton","title":"Apply infomap Theme with Anton Font — theme_infomap_anton","text":"function applies infomap theme using 'Anton' font.","code":""},{"path":"https://da-wi.github.io/cartographr/reference/theme_infomap_anton.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply infomap Theme with Anton Font — theme_infomap_anton","text":"","code":"theme_infomap_anton()"},{"path":"https://da-wi.github.io/cartographr/reference/theme_infomap_anton.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply infomap Theme with Anton Font — theme_infomap_anton","text":"ggplot2 theme object infomap theme settings applied 'Anton' font set.","code":""},{"path":"https://da-wi.github.io/cartographr/reference/theme_infomap_anton.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply infomap Theme with Anton Font — theme_infomap_anton","text":"","code":"if (FALSE) { # Apply the infomap theme with Anton font to a ggplot object ggplot_object + theme_poster_anton() }"},{"path":"https://da-wi.github.io/cartographr/reference/theme_infomap_barlow.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply infomap Theme with Barlow Font — theme_infomap_barlow","title":"Apply infomap Theme with Barlow Font — theme_infomap_barlow","text":"function applies infomap theme using 'Barlow' font.","code":""},{"path":"https://da-wi.github.io/cartographr/reference/theme_infomap_barlow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply infomap Theme with Barlow Font — theme_infomap_barlow","text":"","code":"theme_infomap_barlow()"},{"path":"https://da-wi.github.io/cartographr/reference/theme_infomap_barlow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply infomap Theme with Barlow Font — theme_infomap_barlow","text":"ggplot2 theme object infomap theme settings applied 'Barlow' font set.","code":""},{"path":"https://da-wi.github.io/cartographr/reference/theme_infomap_barlow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply infomap Theme with Barlow Font — theme_infomap_barlow","text":"","code":"if (FALSE) { # Apply the infomap theme with Barlow font to a ggplot object ggplot_object + theme_poster_barlow() }"},{"path":"https://da-wi.github.io/cartographr/reference/theme_infomap_poppins.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply infomap Theme with Poppins Font — theme_infomap_poppins","title":"Apply infomap Theme with Poppins Font — theme_infomap_poppins","text":"function applies infomap theme using 'Poppins' font.","code":""},{"path":"https://da-wi.github.io/cartographr/reference/theme_infomap_poppins.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply infomap Theme with Poppins Font — theme_infomap_poppins","text":"","code":"theme_infomap_poppins()"},{"path":"https://da-wi.github.io/cartographr/reference/theme_infomap_poppins.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply infomap Theme with Poppins Font — theme_infomap_poppins","text":"ggplot2 theme object infomap theme settings applied 'Poppins' font set.","code":""},{"path":"https://da-wi.github.io/cartographr/reference/theme_infomap_poppins.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply infomap Theme with Poppins Font — theme_infomap_poppins","text":"","code":"if (FALSE) { # Apply the infomap theme with Poppins font to a ggplot object ggplot_object + theme_poster_poppins() }"},{"path":"https://da-wi.github.io/cartographr/reference/theme_poster.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a poster-themed theme — theme_poster","title":"Create a poster-themed theme — theme_poster","text":"function generates ggplot2 theme resembles poster style. designed used ggplot2 plots provide clean bold aesthetic suitable poster visuals.","code":""},{"path":"https://da-wi.github.io/cartographr/reference/theme_poster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a poster-themed theme — theme_poster","text":"","code":"theme_poster(font = \"Poppins\")"},{"path":"https://da-wi.github.io/cartographr/reference/theme_poster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a poster-themed theme — theme_poster","text":"font font family used text elements plot. default font set \"Poppins\".","code":""},{"path":"https://da-wi.github.io/cartographr/reference/theme_poster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a poster-themed theme — theme_poster","text":"ggplot2 theme object can added ggplot2 plotting calls.","code":""},{"path":"https://da-wi.github.io/cartographr/reference/theme_poster_anton.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply poster Theme with Anton Font — theme_poster_anton","title":"Apply poster Theme with Anton Font — theme_poster_anton","text":"function applies poster theme using 'Anton' font.","code":""},{"path":"https://da-wi.github.io/cartographr/reference/theme_poster_anton.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply poster Theme with Anton Font — theme_poster_anton","text":"","code":"theme_poster_anton()"},{"path":"https://da-wi.github.io/cartographr/reference/theme_poster_anton.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply poster Theme with Anton Font — theme_poster_anton","text":"ggplot2 theme object poster theme settings applied 'Anton' font set.","code":""},{"path":"https://da-wi.github.io/cartographr/reference/theme_poster_anton.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply poster Theme with Anton Font — theme_poster_anton","text":"","code":"if (FALSE) { # Apply the poster theme with Anton font to a ggplot object ggplot_object + theme_poster_anton() }"},{"path":"https://da-wi.github.io/cartographr/reference/theme_poster_poppins.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply poster Theme with Poppins Font — theme_poster_poppins","title":"Apply poster Theme with Poppins Font — theme_poster_poppins","text":"function applies poster theme using 'Poppins' font.","code":""},{"path":"https://da-wi.github.io/cartographr/reference/theme_poster_poppins.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply poster Theme with Poppins Font — theme_poster_poppins","text":"","code":"theme_poster_poppins()"},{"path":"https://da-wi.github.io/cartographr/reference/theme_poster_poppins.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply poster Theme with Poppins Font — theme_poster_poppins","text":"ggplot2 theme object poster theme settings applied 'Poppins' font set.","code":""},{"path":"https://da-wi.github.io/cartographr/reference/theme_poster_poppins.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply poster Theme with Poppins Font — theme_poster_poppins","text":"","code":"if (FALSE) { # Apply the poster theme with Poppins font to a ggplot object ggplot_object + theme_poster_poppins() }"}]
