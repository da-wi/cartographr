[{"path":"https://da-wi.github.io/cartographr/articles/creating-an-annotated-map.html","id":"setup-the-map-parameters","dir":"Articles","previous_headings":"","what":"Setup the map parameters","title":"Creating an annotated map","text":"provide longitude, latitude. Furthermore, define extend OSM data meters get_osmdata().","code":"osmdata::get_overpass_url() #> [1] \"https://overpass-api.de/api/interpreter\" osmdata::set_overpass_url(\"https://overpass.kumi.systems/api/interpreter\")   df_berlin <- tibble(lat = c(52.516628),        lon = c(13.378704),        y_distance = c(2400),        x_distance = c(2400*sqrt(2)),        name = c(\"berlin\"))  osm <- get_osmdata(df_berlin$lat, df_berlin$lon, df_berlin$y_distance,df_berlin$x_distance) #> Getting data, be patient with requests failing.. #> Creating street network.. #> Construct buildings.. #> Fill in water.. #> Plant trees.. #> Beach, parking.."},{"path":"https://da-wi.github.io/cartographr/articles/creating-an-annotated-map.html","id":"preprocess-the-osm-data","dir":"Articles","previous_headings":"","what":"Preprocess the osm data","title":"Creating an annotated map","text":"function preprocess_map() prepares osm data joining, preparing removing props map.","code":"osm_pps <- osm |> preprocess_map()"},{"path":"https://da-wi.github.io/cartographr/articles/creating-an-annotated-map.html","id":"plot-the-map","dir":"Articles","previous_headings":"","what":"Plot the map","title":"Creating an annotated map","text":"plot_map() generates ggplot2 object using color theme set parameter. means can easily adjust plot using ggplot2 commands also add new information map. Note, adding new geom, coordinate system reset, thus need reset boundaries map using adjust_display().","code":"p <- osm_pps |> plot_map(color = get_color(\"bwinv\"), scaling = get_scaling(\"A3\"))  +   # add geom with coordinates of accidents   geom_point(data = suppressMessages(sf::st_intersection(df_accidents,                                                                osm_pps$my_bbox |> sf::st_as_sfc())),              aes(x=XGCSWGS84,y=YGCSWGS84,color=type), size=5)+ # color=\"#FF474D\")+      # reset the boundary box after adding a new geom   adjust_display(osm_pps) +      # Set theme for labels   theme(     plot.title = element_text(size = 24,hjust = 0,face = \"bold\",colour = \"#292e28\"),     plot.margin = margin(t = 5, r = 5, b = 5, l = 5, unit = \"mm\"),     plot.caption = element_text(face=\"plain\",size=10),     legend.position = \"top\",     legend.justification = c(\"right\",\"top\"),     legend.margin = margin(-8, 0, 0, 0, unit = \"mm\")   ) +       # Set labels   labs(title = \"Traffic accidents in Berlin (2021)\",        color = \"Type\",        caption=\"Dataset: govdata.de\\n© Stadt Berlin (2024)\")  p"},{"path":"https://da-wi.github.io/cartographr/articles/creating-an-annotated-map.html","id":"save-map","dir":"Articles","previous_headings":"","what":"Save map","title":"Creating an annotated map","text":"save_map() can used store print-ready plot object disk drawn object pdf format. Default mode storing output portrait mode. , want landscape orientation can using orientation parameter.","code":"save_map(plot = p, filename=paste0(\"~/berlin_A3_bw.pdf\"), orientation = \"landscape\")"},{"path":"https://da-wi.github.io/cartographr/articles/creating-postcards.html","id":"setup-the-map-parameters-","dir":"Articles","previous_headings":"","what":"Setup the map parameters.","title":"Creating postcards","text":"provide longitude, latitude. Furthermore, define extend OSM data meters get_osmdata. , use map width 1200 m. Also, example create several instances different maps (cities). defined input data, can feed get_osmdata() function. Afterwards, directly preprocess maps using preprocess_map() store new column called osm_pps.","code":"osmdata::get_overpass_url() #> [1] \"https://overpass-api.de/api/interpreter\" osmdata::set_overpass_url(\"https://overpass.kumi.systems/api/interpreter\")  df_coords <- tibble(lat = c(53.54514883288921,47.374566535402685,48.873810503366016),        lon = c(10.000039228206994,8.538175481044222,2.2950207999211405),        y_distance = rep(1200*sqrt(2), 3),        x_distance = rep(1200,3),        name = c(\"hamburg\",\"zürich\",\"paris\"),        color = c(\"berlin\", \"imhof\",\"macau\"))  df_coords |> head() #> # A tibble: 3 × 6 #>     lat   lon y_distance x_distance name    color  #>   <dbl> <dbl>      <dbl>      <dbl> <chr>   <chr>  #> 1  53.5 10.0       1697.       1200 hamburg berlin #> 2  47.4  8.54      1697.       1200 zürich  imhof  #> 3  48.9  2.30      1697.       1200 paris   macau df_coords <- df_coords |>    rowwise() |>   # 1. retrieve osm data   mutate(osm = list(get_osmdata(lat, lon, y_distance, x_distance) )) |>   # 2. preprocess data   mutate(osm_pps = list(preprocess_map(osm))) |>   # 3. remove rowwise() grouping   ungroup() #> Getting data, be patient with requests failing.. #> Creating street network.. #> Construct buildings.. #> Fill in water.. #> Plant trees.. #> Beach, parking.. #> Getting data, be patient with requests failing.. #> Creating street network.. #> Construct buildings.. #> Fill in water.. #> Plant trees.. #> Beach, parking.. #> Getting data, be patient with requests failing.. #> Creating street network.. #> Construct buildings.. #> Fill in water.. #> Plant trees.. #> Beach, parking..  df_coords |> head() #> # A tibble: 3 × 8 #>     lat   lon y_distance x_distance name    color  osm          osm_pps      #>   <dbl> <dbl>      <dbl>      <dbl> <chr>   <chr>  <list>       <list>       #> 1  53.5 10.0       1697.       1200 hamburg berlin <named list> <named list> #> 2  47.4  8.54      1697.       1200 zürich  imhof  <named list> <named list> #> 3  48.9  2.30      1697.       1200 paris   macau  <named list> <named list>"},{"path":"https://da-wi.github.io/cartographr/articles/creating-postcards.html","id":"plot-map","dir":"Articles","previous_headings":"","what":"Plot map","title":"Creating postcards","text":"Now, create ggplot2 objects prepocssed osm_pps object.","code":"df_coords <- df_coords |>    rowwise() |>   # Create ggplot2 objects   mutate(plot = list(     plot_map(osm_pps, color = get_color(color), scaling = get_scaling(\"A6\"))+     labs(title=name)+     theme_postcard(get_scaling(\"A6\"))+      theme(plot.background =element_rect(fill=\"#FFFFFE\",color=\"#AAAAAA\"))     )   ) |>   ungroup()             ggarrange(plotlist = df_coords$plot, ncol = 3)"},{"path":"https://da-wi.github.io/cartographr/articles/creating-postcards.html","id":"save-map","dir":"Articles","previous_headings":"","what":"Save map","title":"Creating postcards","text":"","code":"df_coords |>      rowwise() |>     mutate(res = save_map(plot = plot, filename=paste0(\"~/postcards/\",name,\"_A6_\",color,\".pdf\")))"},{"path":"https://da-wi.github.io/cartographr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"David Willinger. Author, maintainer.","code":""},{"path":"https://da-wi.github.io/cartographr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Willinger D (2024). cartographr: Create print-ready prettymaps R ggplot2 based OSM data.. R package version 0.1, https://da-wi.github.io/cartographr/.","code":"@Manual{,   title = {cartographr: Create print-ready prettymaps with R and ggplot2 based on OSM data.},   author = {David Willinger},   year = {2024},   note = {R package version 0.1},   url = {https://da-wi.github.io/cartographr/}, }"},{"path":"https://da-wi.github.io/cartographr/index.html","id":"cartographr","dir":"","previous_headings":"","what":"Create print-ready prettymaps with R and ggplot2 based on OSM data.","title":"Create print-ready prettymaps with R and ggplot2 based on OSM data.","text":"Make beautiful maps based OSM R","code":""},{"path":"https://da-wi.github.io/cartographr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Create print-ready prettymaps with R and ggplot2 based on OSM data.","text":"Simply install github.","code":"devtools::install_github(\"da-wi/cartographr\",upgrade = \"never\",INSTALL_opts=c(\"--no-multiarch\") ) library(cartographr)"},{"path":"https://da-wi.github.io/cartographr/index.html","id":"getting-stared","dir":"","previous_headings":"","what":"Getting stared","title":"Create print-ready prettymaps with R and ggplot2 based on OSM data.","text":"Try create beautiful poster. Define coordinates center, well extend map meters. Next, retrieve osm data get_osmdata() clean osm object using preprocess_map() function. cleaning osm object unwanted props, map can created using plot_map(). use theme_postcard() theme map, tell theme preferred output size adjust size fonts, linewidths, etc.  Lastly, can save map ready--print pdf using save_map(). prefer bitmap format, can also directly call ggsave() ggplot2() package.","code":"df_vienna <- tibble(lat = c(48.210),                     lon = c(16.371),                     y_distance = c(1200*sqrt(2)),                     x_distance = c(1200),                     name = c(\"vienna\")) osm <- get_osmdata(df_vienna$lat, df_vienna$lon, df_vienna$y_distance, df_vienna$x_distance) |>   preprocess_map() plot_vienna <- osm |> plot_map(color = get_color(\"barcelona\"), scaling = get_scaling(\"A4\")) +   theme_postcard(get_scaling(\"A4\")) +   labs(title=\"vienna\")  plot_vienna save_map(plot = plot.vienna, filename=paste0(\"~/vienna_a4.pdf\")) ggsave(paste0(\"~/vienna_a4.png\"),        plot = plot.vienna,        bg = \"white\",        device = \"png\",        dpi = 96,        width = 210,        height = 297,        units = \"mm\")"},{"path":"https://da-wi.github.io/cartographr/reference/adjust_display.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjust display — adjust_display","title":"Adjust display — adjust_display","text":"function adjust displays called last adding geoms","code":""},{"path":"https://da-wi.github.io/cartographr/reference/adjust_display.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjust display — adjust_display","text":"","code":"adjust_display(osm_object)"},{"path":"https://da-wi.github.io/cartographr/reference/adjust_display.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjust display — adjust_display","text":"osm_object osm_object stored bbox","code":""},{"path":"https://da-wi.github.io/cartographr/reference/berlinaccidents.html","id":null,"dir":"Reference","previous_headings":"","what":"Berlin accidents dataset for 2021 — berlinaccidents","title":"Berlin accidents dataset for 2021 — berlinaccidents","text":"#' dataset produced Amt für Statistik Berlin-Brandenburg data available https://www.govdata.de/web/guest/daten/-/details/strassenverkehrsunfalle-nach-unfallort--berlin-2021.","code":""},{"path":"https://da-wi.github.io/cartographr/reference/berlinaccidents.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Berlin accidents dataset for 2021 — berlinaccidents","text":"","code":"berlinaccidents"},{"path":"https://da-wi.github.io/cartographr/reference/berlinaccidents.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Berlin accidents dataset for 2021 — berlinaccidents","text":"object class spec_tbl_df (inherits tbl_df, tbl, data.frame) 11267 rows 23 columns.","code":""},{"path":"https://da-wi.github.io/cartographr/reference/get_border.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate rectengular border given the coordinates — get_border","title":"Calculate rectengular border given the coordinates — get_border","text":"function calculates correct borders","code":""},{"path":"https://da-wi.github.io/cartographr/reference/get_border.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate rectengular border given the coordinates — get_border","text":"","code":"get_border(lat, lon, offlat, offlon)"},{"path":"https://da-wi.github.io/cartographr/reference/get_border.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate rectengular border given the coordinates — get_border","text":"lat Latitude WSG84 lon Latitude WSG84 offlat offset Latitude offlon offset Longitude","code":""},{"path":"https://da-wi.github.io/cartographr/reference/get_border.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate rectengular border given the coordinates — get_border","text":"border map Coordinates","code":""},{"path":"https://da-wi.github.io/cartographr/reference/get_circle.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate bounding circle — get_circle","title":"Generate bounding circle — get_circle","text":"function generates bounding circle","code":""},{"path":"https://da-wi.github.io/cartographr/reference/get_circle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate bounding circle — get_circle","text":"","code":"get_circle(lat, lon, y_distance, x_distance)"},{"path":"https://da-wi.github.io/cartographr/reference/get_circle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate bounding circle — get_circle","text":"lat Latitude WGS84 lon Longitude WGS84 y_distance Y distance meters x_distance X distance meters","code":""},{"path":"https://da-wi.github.io/cartographr/reference/get_circle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate bounding circle — get_circle","text":"circle","code":""},{"path":"https://da-wi.github.io/cartographr/reference/get_color.html","id":null,"dir":"Reference","previous_headings":"","what":"Create color theme — get_color","title":"Create color theme — get_color","text":"function creates color theme","code":""},{"path":"https://da-wi.github.io/cartographr/reference/get_color.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create color theme — get_color","text":"","code":"get_color(palette, font = \"Poppins\")"},{"path":"https://da-wi.github.io/cartographr/reference/get_color.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create color theme — get_color","text":"palette color palette. Control appearance street lamps setting color (= shown) NULL (leave blank, = shown) font font used. c(\"Poppins\",\"Anton\",\"Cinzel\")","code":""},{"path":"https://da-wi.github.io/cartographr/reference/get_color.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create color theme — get_color","text":"color palette plot_map()","code":""},{"path":"https://da-wi.github.io/cartographr/reference/get_osmdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve OSM data for urban environments — get_osmdata","title":"Retrieve OSM data for urban environments — get_osmdata","text":"function retrieves OSM data sensible defaults cities","code":""},{"path":"https://da-wi.github.io/cartographr/reference/get_osmdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve OSM data for urban environments — get_osmdata","text":"","code":"get_osmdata(lat, lon, y_distance, x_distance, quiet = F)"},{"path":"https://da-wi.github.io/cartographr/reference/get_osmdata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve OSM data for urban environments — get_osmdata","text":"lat Latitude WGS84 lon Longitude WGS84 y_distance Y distance meters x_distance X distance meters","code":""},{"path":"https://da-wi.github.io/cartographr/reference/get_osmdata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve OSM data for urban environments — get_osmdata","text":"shapefiles buildings, streets, water, beaches, greens, ..","code":""},{"path":"https://da-wi.github.io/cartographr/reference/get_scaling.html","id":null,"dir":"Reference","previous_headings":"","what":"Get scaling for a paper format — get_scaling","title":"Get scaling for a paper format — get_scaling","text":"Retrieve correct scaling value based size A1 = default","code":""},{"path":"https://da-wi.github.io/cartographr/reference/get_scaling.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get scaling for a paper format — get_scaling","text":"","code":"get_scaling(format)"},{"path":"https://da-wi.github.io/cartographr/reference/get_scaling.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get scaling for a paper format — get_scaling","text":"format Paper format","code":""},{"path":"https://da-wi.github.io/cartographr/reference/get_scaling.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get scaling for a paper format — get_scaling","text":"scaling.","code":""},{"path":"https://da-wi.github.io/cartographr/reference/plot_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a map — plot_map","title":"Plot a map — plot_map","text":"function plots map","code":""},{"path":"https://da-wi.github.io/cartographr/reference/plot_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a map — plot_map","text":"","code":"plot_map(   osm,   color = get_color(\"imhof\", \"Poppins\"),   scaling = get_scaling(\"A4\") )"},{"path":"https://da-wi.github.io/cartographr/reference/plot_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a map — plot_map","text":"osm OSM object plot color Color theme applied plot scaling scaling applied plot circle TRUE draw circle plot","code":""},{"path":"https://da-wi.github.io/cartographr/reference/preprocess_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocessing map — preprocess_map","title":"Preprocessing map — preprocess_map","text":"function uses sensible defaults remove unnecessary data osm object sets output size printing.","code":""},{"path":"https://da-wi.github.io/cartographr/reference/preprocess_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocessing map — preprocess_map","text":"","code":"preprocess_map(osm)"},{"path":"https://da-wi.github.io/cartographr/reference/preprocess_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocessing map — preprocess_map","text":"osm osm_object stored bbox","code":""},{"path":"https://da-wi.github.io/cartographr/reference/preprocess_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocessing map — preprocess_map","text":"preprocessed osm object","code":""},{"path":"https://da-wi.github.io/cartographr/reference/preprocess_map_circular.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocessing of a circular map — preprocess_map_circular","title":"Preprocessing of a circular map — preprocess_map_circular","text":"function uses sensible defaults remove unnecessary data osm object","code":""},{"path":"https://da-wi.github.io/cartographr/reference/preprocess_map_circular.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocessing of a circular map — preprocess_map_circular","text":"","code":"preprocess_map_circular(osm)"},{"path":"https://da-wi.github.io/cartographr/reference/preprocess_map_circular.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocessing of a circular map — preprocess_map_circular","text":"osm osm_object stored bbox","code":""},{"path":"https://da-wi.github.io/cartographr/reference/preprocess_map_circular.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocessing of a circular map — preprocess_map_circular","text":"preprocessed osm object","code":""},{"path":"https://da-wi.github.io/cartographr/reference/save_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Save map — save_map","title":"Save map — save_map","text":"Save map disk","code":""},{"path":"https://da-wi.github.io/cartographr/reference/save_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save map — save_map","text":"","code":"save_map(plot, filename, orientation = \"portrait\")"},{"path":"https://da-wi.github.io/cartographr/reference/save_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save map — save_map","text":"plot ggplot object filename filename orientation 'portrait' 'landscape'","code":""},{"path":"https://da-wi.github.io/cartographr/reference/theme_postcard.html","id":null,"dir":"Reference","previous_headings":"","what":"Postcard theme — theme_postcard","title":"Postcard theme — theme_postcard","text":"Description function","code":""},{"path":"https://da-wi.github.io/cartographr/reference/theme_postcard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Postcard theme — theme_postcard","text":"","code":"theme_postcard(scaling = get_scaling(\"A4\"))"},{"path":"https://da-wi.github.io/cartographr/reference/theme_postcard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Postcard theme — theme_postcard","text":"scale_factor scale factor output","code":""},{"path":"https://da-wi.github.io/cartographr/reference/theme_postcard.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Postcard theme — theme_postcard","text":"theme","code":""}]
